@import url("https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap");
@import "../../node_modules/.pnpm/@radix-ui+themes@3.1.6_@types+react-dom@18.3.5_@types+react@18.3.17__@types+react@18.3.17_rea_q4opp3rzulrg6syxywa2r35jja/node_modules/@radix-ui/themes/styles.css";

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --cyan: #00b7c2;
  --blue: #11c4fa;
  --amber: #f9a825;
  --black: #000000;
  --zinc: #2b2b2b;
  --white: #e0e0e0;

  --text-light: var(--zinc);
  --text-dark: var(--white);
  --border-light: var(--white), 0.1;
  --border-dark: #2b2b2b;

  --background-light: var(--white);
  --background-dark: #121212;
  --trigger-hover-bg: var(--amber);
  --border-r: 8px;
}

.light {
  --background: var(--background-light);
  --text: var(--text-light);
  --border: var(--border-light);
  --trigger-bg: #ffffff;
}

.dark {
  --background: var(--background-dark);
  --text: var(--text-dark);
  --border: var(--border-dark);
  --trigger-bg: #1e1e1e;
}

.AccordionRoot {
  width: 100%;
  border-radius: var(--border-r);
  background-color: var(--background);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.7);
}

.AccordionItem {
  overflow: hidden;
  border-bottom: 1px solid var(--border);
  width: 100%;
}

.AccordionItem:first-child {
  border-top-left-radius: var(--border-r);
  border-top-right-radius: var(--border-r);
}

.AccordionItem:last-child {
  border-bottom-left-radius: var(--border-r);
  border-bottom-right-radius: var(--border-r);
}

.AccordionTrigger {
  width: 100%;
  background-color: var(--trigger-bg);
  color: var(--text);
  font-size: 16px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 14px 18px;
  border: none;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.AccordionTrigger:hover {
  background-color: var(--trigger-hover-bg);
  color: #ffffff;
}

.AccordionTrigger:focus-visible {
  outline: 2px solid var(--cyan);
}

.AccordionChevron {
  color: var(--text);
  transition: transform 300ms ease;
}

.AccordionTrigger[data-state="open"] > .AccordionChevron {
  transform: rotate(180deg);
}

.AccordionContent {
  background-color: var(--background);
  color: var(--text);
  padding: 12px 18px;
  width: 100%;
  animation-duration: 300ms;
  animation-timing-function: cubic-bezier(0.87, 0, 0.13, 1);
}

.AccordionContent[data-state="open"] {
  animation-name: slideDown;
}

.AccordionContent[data-state="closed"] {
  animation-name: slideUp;
}

.CheckboxRoot {
  display: flex;
  height: 25px;
  width: 25px;
  appearance: none;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-r);
  background-color: var(--trigger-bg);
  border: 1px solid var(--border);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
  cursor: pointer;
}

.CheckboxRoot[data-state="checked"] {
  background-color: var(--amber);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.dark .CheckboxRoot {
  background-color: var(--background-dark);
  border-color: var(--border-dark);
}

.dark .CheckboxRoot:hover {
  background-color: var(--white);
  border-color: var(--cyan);
}

.dark .CheckboxRoot[data-state="checked"] {
  background-color: var(--amber);
  border-color: var(--amber);
}

.ComponentIndicator {
  color: var(--text-light);
  transition: color 0.2s ease;
}

.dark .ComponentIndicator {
  color: var(--text-light);
}

.ComponentLabel {
  padding-left: 10px;
  color: var(--text);
  transition: color 0.2s ease;
}

.CheckboxRoot:focus-visible + .ComponentLabel {
  color: var(--cyan);
}

.dark .ComponentLabel {
  color: var(--text-dark);
}

.SelectTrigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 12px 16px;
  border-radius: var(--border-r);
  background-color: var(--trigger-bg);
  color: var(--amber);
  border: 1px solid var(--border);
  transition: all 0.5s ease-in-out;
  cursor: pointer;
}

.SelectTrigger:hover {
  color: var(--black);
}

.SelectTrigger:focus {
  outline: none;
  box-shadow: 0 0 8px rgba(122, 119, 108, 0.8);
}

.SelectIcon {
  color: var(--amber);
}

.SelectTrigger[data-state="open"] .SelectIcon {
  transform: rotate(180deg);
}

.SelectContent {
  overflow: hidden;
  background-color: var(--background);
  border-radius: 6px;
  box-shadow: 0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2);
  transform: translateY(-10px);
}

.light .SelectContent {
  background-color: var(--white);
  z-index: 100;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  opacity: 1;
  color: var(--black);
}

.dark .SelectContent {
  background-color: var(--zinc);
}

.SelectContent[data-state="open"] {
  transform: translateY(0);
  transition: transform 0.3s ease;
}

.SelectViewport {
  padding: 4px;
  overflow-y: auto;
}

.SelectItem {
  display: flex;
  align-items: center;
  padding: 12px 16px;
  font-size: 14px;
  color: var(--text);
  transition: background-color 0.2s ease, color 0.2s ease;
  cursor: pointer;
}

.SelectItem[data-disabled] {
  color: rgba(255, 255, 255, 0.3);
  pointer-events: none;
}

.SelectTrigger {
  background-color: var(--background);
  color: var(--text);
  border: 1px solid var(--border);
}

.SelectTrigger:hover {
  background-color: var(--trigger-hover-bg);
  color: var(--text);
}

.SelectItem:hover {
  background-color: var(--trigger-hover-bg);
  color: var(--text);
}

.SelectItem[data-highlighted] {
  background-color: var(--amber);
  color: var(--text);
}

.SelectItemIndicator {
  display: none;
}

.SelectLabel {
  padding: 8px 16px;
  color: var(--amber);
  text-transform: uppercase;
}

.SelectSeparator {
  height: 1px;
  background-color: var(--border);
  margin: 4px 0;
}

.SelectScrollButton {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 30px;
  color: var(--amber);
  cursor: pointer;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 1;
    transform: translateY(0);
  }

  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}
